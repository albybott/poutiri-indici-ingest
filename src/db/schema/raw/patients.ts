import { text, timestamp, uuid, check } from "drizzle-orm/pg-core";
import { sql } from "drizzle-orm";
import { extractTypeEnum } from "../shared/enums";
import { createTable } from "../../../utils/create-table";

export const patientsRaw = createTable("raw.patients", {
  // Source columns as text (all fields from Patient extract)
  patientId: text("patient_id"),
  nhiNumber: text("nhi_number"),
  isNhiValidate: text("is_nhi_validate"),
  title: text("title"),
  firstName: text("first_name"),
  middleName: text("middle_name"),
  familyName: text("family_name"),
  fullName: text("full_name"),
  preferredName: text("preferred_name"),
  otherMaidenName: text("other_maiden_name"),
  maritalStatusId: text("marital_status_id"),
  maritalStatus: text("marital_status"),
  genderId: text("gender_id"),
  gender: text("gender"),
  dob: text("dob"),
  age: text("age"),
  ageType: text("age_type"),
  ageGroup: text("age_group"),
  isAlive: text("is_alive"),
  deathDate: text("death_date"),
  dobSource: text("dob_source"),
  picturePath: text("picture_path"),
  consentedToShare: text("consented_to_share"),
  placeOfBirth: text("place_of_birth"),
  countryOfBirthId: text("country_of_birth_id"),
  countryOfBirth: text("country_of_birth"),
  cellNumber: text("cell_number"),
  dayPhone: text("day_phone"),
  nightPhone: text("night_phone"),
  email: text("email"),
  secondaryEmail: text("secondary_email"),
  preferredContactMethod: text("preferred_contact_method"),
  consentTextMessaging: text("consent_text_messaging"),
  isPortalUser: text("is_portal_user"),
  isActive: text("is_active"),
  isDeleted: text("is_deleted"),
  insertedBy: text("inserted_by"),
  updatedBy: text("updated_by"),
  insertedAt: text("inserted_at"),
  updatedAt: text("updated_at"),
  notes: text("notes"),
  isGenderSelfIdentified: text("is_gender_self_identified"),
  sexRelatedGender: text("sex_related_gender"),
  isWorkedVisaRequired: text("is_worked_visa_required"),
  balance: text("balance"),
  medTechBalance: text("med_tech_balance"),
  medTechDateLastPay: text("med_tech_date_last_pay"),
  medTechDateLastStmt: text("med_tech_date_last_stmt"),
  registerStatusId: text("register_status_id"),
  registerStatus: text("register_status"),
  medTechNok: text("med_tech_nok"),
  practiceName: text("practice_name"),
  calculatedBalance: text("calculated_balance"),
  lastStatementDate: text("last_statement_date"),
  lastInvoiceDate: text("last_invoice_date"),
  lastPaymentDate: text("last_payment_date"),
  providerName: text("provider_name"),
  chartNumber: text("chart_number"),
  extention: text("extention"),
  practiceRemarks: text("practice_remarks"),
  isInsured: text("is_insured"),
  insuredRemarks: text("insured_remarks"),
  smokingType: text("smoking_type"),
  accountHolder: text("account_holder"),
  accountHolderEmployer: text("account_holder_employer"),
  isCommunityServiceCard: text("is_community_service_card"),
  communityServiceCardNo: text("community_service_card_no"),
  communityServiceCardExipryDate: text("community_service_card_exipry_date"),
  communityServiceCardSighted: text("community_service_card_sighted"),
  isHealthCard: text("is_health_card"),
  healthCardNo: text("health_card_no"),
  healthCardExpiryDate: text("health_card_expiry_date"),
  healthCardSighted: text("health_card_sighted"),
  winz: text("winz"),
  isTransferOfRecords: text("is_transfer_of_records"),
  transferOfRecordsRemarks: text("transfer_of_records_remarks"),
  enrolmentType: text("enrolment_type"),
  enrolmentStatusId: text("enrolment_status_id"),
  enrolmentStatus: text("enrolment_status"),
  enrolmentDate: text("enrolment_date"),
  enrolmentMethod: text("enrolment_method"),
  enrolmentVerifier: text("enrolment_verifier"),
  fundingStatusId: text("funding_status_id"),
  fundingStatus: text("funding_status"),
  rejectionReason: text("rejection_reason"),
  fundingFrom: text("funding_from"),
  fundingTo: text("funding_to"),
  accountGroup: text("account_group"),
  gmsCode: text("gms_code"),
  residentialStatus: text("residential_status"),
  isNka: text("is_nka"),
  isHighCare: text("is_high_care"),
  highCareReason: text("high_care_reason"),
  isCarePlan: text("is_care_plan"),
  isNewRegisteration: text("is_new_registeration"),
  isOptOff: text("is_opt_off"),
  isBpGraph: text("is_bp_graph"),
  isBmiGraph: text("is_bmi_graph"),
  isInrGraph: text("is_inr_graph"),
  isHba1cGraph: text("is_hba1c_graph"),
  asrMarkStatus: text("asr_mark_status"),
  isHeightGraph: text("is_height_graph"),
  isWeightGraph: text("is_weight_graph"),
  isHcGraph: text("is_hc_graph"),
  nesStatus: text("nes_status"),
  nesComments: text("nes_comments"),
  medTechBalanceDate: text("med_tech_balance_date"),
  isHeartRate: text("is_heart_rate"),
  isPremature: text("is_premature"),
  prematureWeek: text("premature_week"),
  patientPhoId: text("patient_pho_id"),
  consultUpdatedAt: text("consult_updated_at"),
  occupation: text("occupation"),
  emergencyContact: text("emergency_contact"),
  emergencyContactName: text("emergency_contact_name"),
  secondaryContact: text("secondary_contact"),
  secondaryContactName: text("secondary_contact_name"),
  providerId: text("provider_id"),
  practiceId: text("practice_id"),
  portalRegistrationStatus: text("portal_registration_status"),
  registrationDate: text("registration_date"),
  medTechId: text("med_tech_id"),
  permanentAddressHouseNumber: text("permanent_address_house_number"),
  permanentAddressBuildingNumber: text("permanent_address_building_number"),
  permanentAddressStreetNumber: text("permanent_address_street_number"),
  permanentAddressSuburbTownId: text("permanent_address_suburb_town_id"),
  permanentAddressSuburb: text("permanent_address_suburb"),
  permanentAddressCityAreaId: text("permanent_address_city_area_id"),
  permanentAddressCity: text("permanent_address_city"),
  permanentAddressPostalCode: text("permanent_address_postal_code"),
  permanentAddressLatitude: text("permanent_address_latitude"),
  permanentAddressLongitude: text("permanent_address_longitude"),
  permanentAddressCountryId: text("permanent_address_country_id"),
  permanentAddressCountry: text("permanent_address_country"),
  permanentAddress: text("permanent_address"),
  permanentAddressDhbCode: text("permanent_address_dhb_code"),
  permanentAddressDomicileCode: text("permanent_address_domicile_code"),
  permanentAddressDeprivationQuintile: text(
    "permanent_address_deprivation_quintile"
  ),
  permanentAddressDeprivationDecile: text(
    "permanent_address_deprivation_decile"
  ),
  permanentAddressMeshblock: text("permanent_address_meshblock"),
  permanentAddressMatchScore: text("permanent_address_match_score"),
  permanentAddressUncertaintyCode: text("permanent_address_uncertainty_code"),
  temporaryAddress: text("temporary_address"),
  postalAddressHouseNumber: text("postal_address_house_number"),
  postalAddressBuildingNumber: text("postal_address_building_number"),
  postalAddressStreetNumber: text("postal_address_street_number"),
  postalAddressSuburbTownId: text("postal_address_suburb_town_id"),
  postalAddressSuburb: text("postal_address_suburb"),
  postalAddressCityAreaId: text("postal_address_city_area_id"),
  postalAddressCity: text("postal_address_city"),
  postalAddressPostalCode: text("postal_address_postal_code"),
  postalAddressLatitude: text("postal_address_latitude"),
  postalAddressLongitude: text("postal_address_longitude"),
  postalAddressCountryId: text("postal_address_country_id"),
  postalAddressCountry: text("postal_address_country"),
  postalAddress: text("postal_address"),
  postalAddressDhbCode: text("postal_address_dhb_code"),
  postalAddressDomicileCode: text("postal_address_domicile_code"),
  postalAddressDeprivationQuintile: text("postal_address_deprivation_quintile"),
  postalAddressDeprivationDecile: text("postal_address_deprivation_decile"),
  postalAddressMeshblock: text("postal_address_meshblock"),
  postalAddressMatchScore: text("postal_address_match_score"),
  postalAddressUncertaintyCode: text("postal_address_uncertainty_code"),
  ethnicityId: text("ethnicity_id"),
  ethnicity: text("ethnicity"),
  ethcode: text("ethcode"),
  ethcode2: text("ethcode2"),
  secondaryEthnicityId: text("secondary_ethnicity_id"),
  secondaryEthnicity: text("secondary_ethnicity"),
  ethcode3: text("ethcode3"),
  otherEthnicityId: text("other_ethnicity_id"),
  otherEthnicity: text("other_ethnicity"),
  enrolmentId: text("enrolment_id"),
  phoName: text("pho_name"),
  enrolmentExpiryDate: text("enrolment_expiry_date"),
  isConsentToShare: text("is_consent_to_share"),
  isWorkVisa: text("is_work_visa"),
  workVisaStartDate: text("work_visa_start_date"),
  workVisaExpiryDate: text("work_visa_expiry_date"),
  enrolmentQuarter: text("enrolment_quarter"),
  practiceLocation: text("practice_location"),
  accountHolderTypeId: text("account_holder_type_id"),
  patientType: text("patient_type"),
  breastScreenId: text("breast_screen_id"),
  breastScreen: text("breast_screen"),
  isPregnant: text("is_pregnant"),
  applyCharges: text("apply_charges"),
  includeInPrint: text("include_in_print"),
  isCareplus: text("is_careplus"),
  carePlusStartDate: text("care_plus_start_date"),
  carePlusEnddate: text("care_plus_enddate"),
  carePlusLincStatusId: text("care_plus_linc_status_id"),
  carePlusLincStatus: text("care_plus_linc_status"),
  nhiStatusId: text("nhi_status_id"),
  nhiStatus: text("nhi_status"),
  perOrgId: text("per_org_id"),
  loadedDateTime: text("loaded_date_time"),
  accountHolderProfileId: text("account_holder_profile_id"),
  comunityServiceEffectiveDate: text("comunity_service_effective_date"),
  defaultGpmcNo: text("default_gpmc_no"),
  defaultGpName: text("default_gp_name"),
  defaultPracticeEdi: text("default_practice_edi"),
  defaultPracticeName: text("default_practice_name"),
  enrolmentEndDate: text("enrolment_end_date"),
  isCapitated: text("is_capitated"),
  isConsentAutoReminderTextMessaging: text(
    "is_consent_auto_reminder_text_messaging"
  ),
  isConsentForExperienceSurvey: text("is_consent_for_experience_survey"),
  isConsentToImportClinicalRecords: text(
    "is_consent_to_import_clinical_records"
  ),
  isConsentToPrivateEmailAddress: text("is_consent_to_private_email_address"),
  isConsentToShareClinicalRecords: text("is_consent_to_share_clinical_records"),
  isConsentToShareHealth1: text("is_consent_to_share_health1"),
  isConsentToShareMyRecordOnSehr: text("is_consent_to_share_my_record_on_sehr"),
  isConsentToSharePhoDataCollection: text(
    "is_consent_to_share_pho_data_collection"
  ),
  isIncludeAccountFee: text("is_include_account_fee"),
  isIncludeStatementFee: text("is_include_statement_fee"),
  isLinkedCscExists: text("is_linked_csc_exists"),
  isTestRecord: text("is_test_record"),
  pharmacyId: text("pharmacy_id"),
  residentialStatusId: text("residential_status_id"),
  visaExpiry: text("visa_expiry"),

  // Lineage columns
  s3Bucket: text("s3_bucket").notNull(),
  s3Key: text("s3_key").notNull(),
  s3VersionId: text("s3_version_id").notNull(),
  fileHash: text("file_hash").notNull(),
  dateExtracted: text("date_extracted").notNull(),
  extractType: extractTypeEnum("extract_type").notNull(),
  loadRunId: uuid("load_run_id").notNull(),
  loadTs: timestamp("load_ts", { withTimezone: true }).notNull().defaultNow(),
});
