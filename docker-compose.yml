services:
  redis:
    image: redis:7-alpine
    container_name: redis-server
    restart: unless-stopped

    # Port mapping
    ports:
      - "${REDIS_PORT:-6379}:6379"

    # Environment variables from .env file
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=${REDIS_PASSWORD}

    # Volume for data persistence
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro

    # Custom Redis configuration with password from env
    command: >
      sh -c "
      if [ -n \"$REDIS_PASSWORD\" ]; then
        redis-server /usr/local/etc/redis/redis.conf --requirepass \"$REDIS_PASSWORD\"
      else
        redis-server /usr/local/etc/redis/redis.conf
      fi
      "

    # Health check with password support
    healthcheck:
      test: >
        sh -c "
        if [ -n \"$REDIS_PASSWORD\" ]; then
          redis-cli -a \"$REDIS_PASSWORD\" ping
        else
          redis-cli ping
        fi
        "
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    # Security
    networks:
      - redis_network

  # Optional: Redis Commander (Web UI for Redis)
  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   container_name: redis-commander
  #   restart: unless-stopped
  #   ports:
  #     - "${REDIS_COMMANDER_PORT:-8081}:8081"
  #   environment:
  #     - REDIS_HOSTS=redis:redis-server:6379:0:${REDIS_PASSWORD}
  #   depends_on:
  #     - redis
  #   networks:
  #     - redis_network

volumes:
  redis_data:
    driver: local

networks:
  redis_network:
    driver: bridge
