import { text, timestamp, uuid } from "drizzle-orm/pg-core";
import { createTable } from "../../../utils/create-table.js";

export const immunisationsRaw = createTable("raw.immunisations", {
  // Source columns as text (all fields from Immunisation extract)
  appointmentImmunisationId: text("appointment_immunisation_id"),
  patientId: text("patient_id"),
  appointmentId: text("appointment_id"),
  patientScheduleId: text("patient_schedule_id"),
  vaccineId: text("vaccine_id"),
  vaccineName: text("vaccine_name"),
  vaccineCode: text("vaccine_code"),
  dose: text("dose"),
  doseNumber: text("dose_number"),
  administrationSiteId: text("administration_site_id"),
  administrationSite: text("administration_site"),
  routeId: text("route_id"),
  route: text("route"),
  batchNumber: text("batch_number"),
  expiryDate: text("expiry_date"),
  immunisationStatusId: text("immunisation_status_id"),
  immunisationStatus: text("immunisation_status"),
  vaccineOutcomeId: text("vaccine_outcome_id"),
  vaccineOutcome: text("vaccine_outcome"),
  isNirAck: text("is_nir_ack"),
  reason: text("reason"),
  providerId: text("provider_id"),
  provider: text("provider"),
  comments: text("comments"),
  administrationTime: text("administration_time"),
  vaccineIndicationId: text("vaccine_indication_id"),
  vaccineIndication: text("vaccine_indication"),
  vaccineIndicationCode: text("vaccine_indication_code"),
  needleLength: text("needle_length"),
  hasDiluent: text("has_diluent"),
  diluentBatchNo: text("diluent_batch_no"),
  diluentExpiryDate: text("diluent_expiry_date"),
  isConfidential: text("is_confidential"),
  costingCodeId: text("costing_code_id"),
  costingCode: text("costing_code"),
  brandId: text("brand_id"),
  brand: text("brand"),
  isActive: text("is_active"),
  isDeleted: text("is_deleted"),
  insertedById: text("inserted_by_id"),
  insertedBy: text("inserted_by"),
  updatedById: text("updated_by_id"),
  updatedBy: text("updated_by"),
  insertedAt: text("inserted_at"),
  updatedAt: text("updated_at"),
  isParked: text("is_parked"),
  medTechId: text("med_tech_id"),
  practiceId: text("practice_id"),
  practice: text("practice"),
  isAutoBill: text("is_auto_bill"),
  vaccinatorId: text("vaccinator_id"),
  vaccinator: text("vaccinator"),
  userLoggingId: text("user_logging_id"),
  loggingUserName: text("logging_user_name"),
  nirSentDate: text("nir_sent_date"),
  showOnPortal: text("show_on_portal"),
  vaccinatorCode: text("vaccinator_code"),
  permanentAddressLatitude: text("permanent_address_latitude"),
  permanentAddressLongitude: text("permanent_address_longitude"),
  practiceLocationId: text("practice_location_id"),
  locationName: text("location_name"),
  vaccineGroupId: text("vaccine_group_id"),
  vaccineGroup: text("vaccine_group"),
  perOrgId: text("per_org_id"),
  loadedDateTime: text("loaded_date_time"),

  // Lineage columns
  s3Bucket: text("s3_bucket").notNull(),
  s3Key: text("s3_key").notNull(),
  s3VersionId: text("s3_version_id").notNull(),
  fileHash: text("file_hash").notNull(),
  dateExtracted: text("date_extracted").notNull(),
  extractType: text("extract_type").notNull(),
  loadRunId: uuid("load_run_id").notNull(),
  loadTs: timestamp("load_ts", { withTimezone: true }).notNull().defaultNow(),
});
