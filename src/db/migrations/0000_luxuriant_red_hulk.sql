CREATE SCHEMA "core";
--> statement-breakpoint
CREATE SCHEMA "etl";
--> statement-breakpoint
CREATE SCHEMA "raw";
--> statement-breakpoint
CREATE SCHEMA "stg";
--> statement-breakpoint
CREATE TYPE "public"."appointment_status" AS ENUM('scheduled', 'confirmed', 'arrived', 'in_progress', 'completed', 'cancelled', 'no_show', 'rescheduled');--> statement-breakpoint
CREATE TYPE "public"."extract_type" AS ENUM('Patient', 'Appointments', 'Immunisation', 'Invoices', 'InvoiceDetail', 'Provider', 'PracticeInfo', 'Measurements', 'Diagnosis', 'Recalls', 'Inbox', 'InboxDetail', 'Medicine', 'NextOfKin', 'Vaccine', 'Allergies', 'AppointmentMedications', 'PatientAlerts');--> statement-breakpoint
CREATE TYPE "public"."immunisation_status" AS ENUM('completed', 'pending', 'overdue', 'cancelled', 'not_required');--> statement-breakpoint
CREATE TYPE "public"."status_group" AS ENUM('active', 'completed', 'cancelled', 'no_show');--> statement-breakpoint
CREATE TABLE "raw"."patients" (
	"patient_id" text,
	"nhi_number" text,
	"is_nhi_validate" text,
	"title" text,
	"first_name" text,
	"middle_name" text,
	"family_name" text,
	"full_name" text,
	"preferred_name" text,
	"other_maiden_name" text,
	"marital_status_id" text,
	"marital_status" text,
	"gender_id" text,
	"gender" text,
	"dob" text,
	"age" text,
	"age_type" text,
	"age_group" text,
	"is_alive" text,
	"death_date" text,
	"dob_source" text,
	"picture_path" text,
	"consented_to_share" text,
	"place_of_birth" text,
	"country_of_birth_id" text,
	"country_of_birth" text,
	"cell_number" text,
	"day_phone" text,
	"night_phone" text,
	"email" text,
	"secondary_email" text,
	"preferred_contact_method" text,
	"consent_text_messaging" text,
	"is_portal_user" text,
	"is_active" text,
	"is_deleted" text,
	"inserted_by" text,
	"updated_by" text,
	"inserted_at" text,
	"updated_at" text,
	"notes" text,
	"is_gender_self_identified" text,
	"sex_related_gender" text,
	"is_worked_visa_required" text,
	"balance" text,
	"med_tech_balance" text,
	"med_tech_date_last_pay" text,
	"med_tech_date_last_stmt" text,
	"register_status_id" text,
	"register_status" text,
	"med_tech_nok" text,
	"practice_name" text,
	"calculated_balance" text,
	"last_statement_date" text,
	"last_invoice_date" text,
	"last_payment_date" text,
	"provider_name" text,
	"chart_number" text,
	"extention" text,
	"practice_remarks" text,
	"is_insured" text,
	"insured_remarks" text,
	"smoking_type" text,
	"account_holder" text,
	"account_holder_employer" text,
	"is_community_service_card" text,
	"community_service_card_no" text,
	"community_service_card_exipry_date" text,
	"community_service_card_sighted" text,
	"is_health_card" text,
	"health_card_no" text,
	"health_card_expiry_date" text,
	"health_card_sighted" text,
	"winz" text,
	"is_transfer_of_records" text,
	"transfer_of_records_remarks" text,
	"enrolment_type" text,
	"enrolment_status_id" text,
	"enrolment_status" text,
	"enrolment_date" text,
	"enrolment_method" text,
	"enrolment_verifier" text,
	"funding_status_id" text,
	"funding_status" text,
	"rejection_reason" text,
	"funding_from" text,
	"funding_to" text,
	"account_group" text,
	"gms_code" text,
	"residential_status" text,
	"is_nka" text,
	"is_high_care" text,
	"high_care_reason" text,
	"is_care_plan" text,
	"is_new_registeration" text,
	"is_opt_off" text,
	"is_bp_graph" text,
	"is_bmi_graph" text,
	"is_inr_graph" text,
	"is_hba1c_graph" text,
	"asr_mark_status" text,
	"is_height_graph" text,
	"is_weight_graph" text,
	"is_hc_graph" text,
	"nes_status" text,
	"nes_comments" text,
	"med_tech_balance_date" text,
	"is_heart_rate" text,
	"is_premature" text,
	"premature_week" text,
	"patient_pho_id" text,
	"consult_updated_at" text,
	"occupation" text,
	"emergency_contact" text,
	"emergency_contact_name" text,
	"secondary_contact" text,
	"secondary_contact_name" text,
	"provider_id" text,
	"practice_id" text,
	"portal_registration_status" text,
	"registration_date" text,
	"med_tech_id" text,
	"permanent_address_house_number" text,
	"permanent_address_building_number" text,
	"permanent_address_street_number" text,
	"permanent_address_suburb_town_id" text,
	"permanent_address_suburb" text,
	"permanent_address_city_area_id" text,
	"permanent_address_city" text,
	"permanent_address_postal_code" text,
	"permanent_address_latitude" text,
	"permanent_address_longitude" text,
	"permanent_address_country_id" text,
	"permanent_address_country" text,
	"permanent_address" text,
	"permanent_address_dhb_code" text,
	"permanent_address_domicile_code" text,
	"permanent_address_deprivation_quintile" text,
	"permanent_address_deprivation_decile" text,
	"permanent_address_meshblock" text,
	"permanent_address_match_score" text,
	"permanent_address_uncertainty_code" text,
	"temporary_address" text,
	"postal_address_house_number" text,
	"postal_address_building_number" text,
	"postal_address_street_number" text,
	"postal_address_suburb_town_id" text,
	"postal_address_suburb" text,
	"postal_address_city_area_id" text,
	"postal_address_city" text,
	"postal_address_postal_code" text,
	"postal_address_latitude" text,
	"postal_address_longitude" text,
	"postal_address_country_id" text,
	"postal_address_country" text,
	"postal_address" text,
	"postal_address_dhb_code" text,
	"postal_address_domicile_code" text,
	"postal_address_deprivation_quintile" text,
	"postal_address_deprivation_decile" text,
	"postal_address_meshblock" text,
	"postal_address_match_score" text,
	"postal_address_uncertainty_code" text,
	"ethnicity_id" text,
	"ethnicity" text,
	"ethcode" text,
	"ethcode2" text,
	"secondary_ethnicity_id" text,
	"secondary_ethnicity" text,
	"ethcode3" text,
	"other_ethnicity_id" text,
	"other_ethnicity" text,
	"enrolment_id" text,
	"pho_name" text,
	"enrolment_expiry_date" text,
	"is_consent_to_share" text,
	"is_work_visa" text,
	"work_visa_start_date" text,
	"work_visa_expiry_date" text,
	"enrolment_quarter" text,
	"practice_location" text,
	"account_holder_type_id" text,
	"patient_type" text,
	"breast_screen_id" text,
	"breast_screen" text,
	"is_pregnant" text,
	"apply_charges" text,
	"include_in_print" text,
	"is_careplus" text,
	"care_plus_start_date" text,
	"care_plus_enddate" text,
	"care_plus_linc_status_id" text,
	"care_plus_linc_status" text,
	"nhi_status_id" text,
	"nhi_status" text,
	"per_org_id" text,
	"loaded_date_time" text,
	"account_holder_profile_id" text,
	"comunity_service_effective_date" text,
	"default_gpmc_no" text,
	"default_gp_name" text,
	"default_practice_edi" text,
	"default_practice_name" text,
	"enrolment_end_date" text,
	"is_capitated" text,
	"is_consent_auto_reminder_text_messaging" text,
	"is_consent_for_experience_survey" text,
	"is_consent_to_import_clinical_records" text,
	"is_consent_to_private_email_address" text,
	"is_consent_to_share_clinical_records" text,
	"is_consent_to_share_health1" text,
	"is_consent_to_share_my_record_on_sehr" text,
	"is_consent_to_share_pho_data_collection" text,
	"is_include_account_fee" text,
	"is_include_statement_fee" text,
	"is_linked_csc_exists" text,
	"is_test_record" text,
	"pharmacy_id" text,
	"residential_status_id" text,
	"visa_expiry" text,
	"load_run_file_id" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "stg"."patients" (
	"patient_id" text NOT NULL,
	"nhi_number" text,
	"is_nhi_validate" boolean,
	"title" text,
	"first_name" text,
	"middle_name" text,
	"family_name" text,
	"full_name" text,
	"preferred_name" text,
	"other_maiden_name" text,
	"marital_status_id" text,
	"marital_status" text,
	"gender_id" text,
	"gender" text,
	"dob" date,
	"age" integer,
	"age_type" text,
	"age_group" text,
	"is_alive" boolean,
	"death_date" date,
	"dob_source" text,
	"picture_path" text,
	"consented_to_share" boolean,
	"place_of_birth" text,
	"country_of_birth_id" text,
	"country_of_birth" text,
	"cell_number" text,
	"day_phone" text,
	"night_phone" text,
	"email" text,
	"secondary_email" text,
	"preferred_contact_method" text,
	"consent_text_messaging" boolean,
	"is_portal_user" boolean,
	"is_active" boolean,
	"is_deleted" boolean,
	"inserted_by" text,
	"updated_by" text,
	"inserted_at" timestamp with time zone,
	"updated_at" timestamp with time zone,
	"notes" text,
	"is_gender_self_identified" boolean,
	"sex_related_gender" text,
	"is_worked_visa_required" boolean,
	"balance" numeric(10, 2),
	"med_tech_balance" numeric(10, 2),
	"med_tech_date_last_pay" date,
	"med_tech_date_last_stmt" date,
	"register_status_id" text,
	"register_status" text,
	"med_tech_nok" text,
	"practice_name" text,
	"calculated_balance" numeric(10, 2),
	"last_statement_date" date,
	"last_invoice_date" date,
	"last_payment_date" date,
	"provider_name" text,
	"chart_number" text,
	"extention" text,
	"practice_remarks" text,
	"is_insured" boolean,
	"insured_remarks" text,
	"smoking_type" text,
	"account_holder" text,
	"account_holder_employer" text,
	"is_community_service_card" boolean,
	"community_service_card_no" text,
	"community_service_card_exipry_date" date,
	"community_service_card_sighted" boolean,
	"is_health_card" boolean,
	"health_card_no" text,
	"health_card_expiry_date" date,
	"health_card_sighted" boolean,
	"winz" text,
	"is_transfer_of_records" boolean,
	"transfer_of_records_remarks" text,
	"enrolment_type" text,
	"enrolment_status_id" text,
	"enrolment_status" text,
	"enrolment_date" date,
	"enrolment_method" text,
	"enrolment_verifier" text,
	"funding_status_id" text,
	"funding_status" text,
	"rejection_reason" text,
	"funding_from" date,
	"funding_to" date,
	"account_group" text,
	"gms_code" text,
	"residential_status" text,
	"is_nka" boolean,
	"is_high_care" boolean,
	"high_care_reason" text,
	"is_care_plan" boolean,
	"is_new_registeration" boolean,
	"is_opt_off" boolean,
	"is_bp_graph" boolean,
	"is_bmi_graph" boolean,
	"is_inr_graph" boolean,
	"is_hba1c_graph" boolean,
	"asr_mark_status" text,
	"is_height_graph" boolean,
	"is_weight_graph" boolean,
	"is_hc_graph" boolean,
	"nes_status" text,
	"nes_comments" text,
	"med_tech_balance_date" date,
	"is_heart_rate" boolean,
	"is_premature" boolean,
	"premature_week" integer,
	"patient_pho_id" text,
	"consult_updated_at" timestamp with time zone,
	"occupation" text,
	"emergency_contact" text,
	"emergency_contact_name" text,
	"secondary_contact" text,
	"secondary_contact_name" text,
	"provider_id" text,
	"practice_id" text NOT NULL,
	"portal_registration_status" text,
	"registration_date" date,
	"med_tech_id" text,
	"permanent_address_house_number" text,
	"permanent_address_building_number" text,
	"permanent_address_street_number" text,
	"permanent_address_suburb_town_id" text,
	"permanent_address_suburb" text,
	"permanent_address_city_area_id" text,
	"permanent_address_city" text,
	"permanent_address_postal_code" text,
	"permanent_address_latitude" numeric(10, 8),
	"permanent_address_longitude" numeric(11, 8),
	"permanent_address_country_id" text,
	"permanent_address_country" text,
	"permanent_address" text,
	"permanent_address_dhb_code" text,
	"permanent_address_domicile_code" text,
	"permanent_address_deprivation_quintile" integer,
	"permanent_address_deprivation_decile" integer,
	"permanent_address_meshblock" text,
	"permanent_address_match_score" numeric(5, 2),
	"permanent_address_uncertainty_code" text,
	"temporary_address" text,
	"postal_address_house_number" text,
	"postal_address_building_number" text,
	"postal_address_street_number" text,
	"postal_address_suburb_town_id" text,
	"postal_address_suburb" text,
	"postal_address_city_area_id" text,
	"postal_address_city" text,
	"postal_address_postal_code" text,
	"postal_address_latitude" numeric(10, 8),
	"postal_address_longitude" numeric(11, 8),
	"postal_address_country_id" text,
	"postal_address_country" text,
	"postal_address" text,
	"postal_address_dhb_code" text,
	"postal_address_domicile_code" text,
	"postal_address_deprivation_quintile" integer,
	"postal_address_deprivation_decile" integer,
	"postal_address_meshblock" text,
	"postal_address_match_score" numeric(5, 2),
	"postal_address_uncertainty_code" text,
	"ethnicity_id" text,
	"ethnicity" text,
	"ethcode" text,
	"ethcode2" text,
	"secondary_ethnicity_id" text,
	"secondary_ethnicity" text,
	"ethcode3" text,
	"other_ethnicity_id" text,
	"other_ethnicity" text,
	"enrolment_id" text,
	"pho_name" text,
	"enrolment_expiry_date" date,
	"is_consent_to_share" boolean,
	"is_work_visa" boolean,
	"work_visa_start_date" date,
	"work_visa_expiry_date" date,
	"enrolment_quarter" text,
	"practice_location" text,
	"account_holder_type_id" text,
	"patient_type" text,
	"breast_screen_id" text,
	"breast_screen" text,
	"is_pregnant" boolean,
	"apply_charges" boolean,
	"include_in_print" boolean,
	"is_careplus" boolean,
	"care_plus_start_date" date,
	"care_plus_enddate" date,
	"care_plus_linc_status_id" text,
	"care_plus_linc_status" text,
	"nhi_status_id" text,
	"nhi_status" text,
	"per_org_id" text NOT NULL,
	"loaded_date_time" timestamp with time zone,
	"load_run_file_id" integer NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."medicine" (
	"medicine_key" serial PRIMARY KEY NOT NULL,
	"medicine_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"effective_from" timestamp with time zone NOT NULL,
	"effective_to" timestamp with time zone,
	"is_current" boolean DEFAULT true NOT NULL,
	"medicine_name" text NOT NULL,
	"medicine_short_name" text,
	"sctid" text,
	"type" text,
	"pharma_code" text,
	"is_active" boolean DEFAULT true NOT NULL,
	"is_deleted" boolean DEFAULT false NOT NULL,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."patient" (
	"patient_key" serial PRIMARY KEY NOT NULL,
	"patient_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"nhi_number" text,
	"title" text,
	"first_name" text,
	"middle_name" text,
	"family_name" text,
	"full_name" text,
	"preferred_name" text,
	"gender" text,
	"dob" date,
	"age" integer,
	"age_group" text,
	"is_alive" boolean DEFAULT true NOT NULL,
	"death_date" date,
	"marital_status" text,
	"ethnicity" text,
	"residential_status" text,
	"is_active" boolean DEFAULT true NOT NULL,
	"is_deleted" boolean DEFAULT false NOT NULL,
	"cell_number" text,
	"day_phone" text,
	"night_phone" text,
	"email" text,
	"permanent_address_city" text,
	"permanent_address_suburb" text,
	"permanent_address_postal_code" text,
	"permanent_address_dhb_code" text,
	"permanent_address_deprivation_quintile" integer,
	"provider_id" text,
	"practice_name" text,
	"effective_from" timestamp with time zone NOT NULL,
	"effective_to" timestamp with time zone,
	"is_current" boolean DEFAULT true NOT NULL,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."practice" (
	"practice_key" serial PRIMARY KEY NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"effective_from" timestamp with time zone NOT NULL,
	"effective_to" timestamp with time zone,
	"is_current" boolean DEFAULT true NOT NULL,
	"practice_name" text NOT NULL,
	"practice_category" text,
	"practice_speciality" text,
	"pho" text,
	"organization_type" text,
	"org_short_name" text,
	"org_code" text,
	"edi_account" text,
	"legal_entity_title" text,
	"legal_status" text,
	"incorporation_number" text,
	"ownership_model" text,
	"rural" boolean DEFAULT false NOT NULL,
	"primary_phone" text,
	"secondary_phone" text,
	"primary_email" text,
	"secondary_email" text,
	"health_facility_no" text,
	"hpi_facility_no" text,
	"gst_no" text,
	"acc_no" text,
	"is_active" boolean DEFAULT true NOT NULL,
	"is_deleted" boolean DEFAULT false NOT NULL,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."provider" (
	"provider_key" serial PRIMARY KEY NOT NULL,
	"provider_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"effective_from" timestamp with time zone NOT NULL,
	"effective_to" timestamp with time zone,
	"is_current" boolean DEFAULT true NOT NULL,
	"nhi_number" text,
	"title" text,
	"first_name" text,
	"middle_name" text,
	"family_name" text NOT NULL,
	"full_name" text NOT NULL,
	"preferred_name" text,
	"gender" text,
	"dob" date,
	"is_alive" boolean DEFAULT true NOT NULL,
	"death_date" date,
	"nzmc_no" text,
	"npi_no" text,
	"provider_code" text,
	"accreditation_no" text,
	"hpi_no" text,
	"practice_name" text,
	"user_role" text,
	"is_active" boolean DEFAULT true NOT NULL,
	"is_deleted" boolean DEFAULT false NOT NULL,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."vaccine" (
	"vaccine_key" serial PRIMARY KEY NOT NULL,
	"vaccine_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"effective_from" timestamp with time zone NOT NULL,
	"effective_to" timestamp with time zone,
	"is_current" boolean DEFAULT true NOT NULL,
	"vaccine_code" text NOT NULL,
	"vaccine_name" text NOT NULL,
	"long_description" text,
	"coding_system" text,
	"gender" text,
	"is_nir" boolean DEFAULT false NOT NULL,
	"is_active" boolean DEFAULT true NOT NULL,
	"is_deleted" boolean DEFAULT false NOT NULL,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."fact_appointment" (
	"appointment_key" serial PRIMARY KEY NOT NULL,
	"appointment_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"patient_key" integer,
	"provider_key" integer,
	"practice_key" integer,
	"appointment_type" text,
	"appointment_status" text,
	"status_group" text,
	"schedule_date" timestamp with time zone,
	"start_time" timestamp with time zone,
	"end_time" timestamp with time zone,
	"consult_start_time" timestamp with time zone,
	"consult_end_time" timestamp with time zone,
	"duration" integer,
	"consult_time" integer,
	"arrived" boolean DEFAULT false NOT NULL,
	"is_arrived" boolean DEFAULT false NOT NULL,
	"waiting_for_payment" boolean DEFAULT false NOT NULL,
	"appointment_completed" boolean DEFAULT false NOT NULL,
	"is_consult_parked" boolean DEFAULT false NOT NULL,
	"is_dummy" boolean DEFAULT false NOT NULL,
	"is_confidential" boolean DEFAULT false NOT NULL,
	"is_consent_to_share" boolean DEFAULT false NOT NULL,
	"gp_queue_time" integer,
	"nurse_queue_time" integer,
	"triage_queue_time" integer,
	"virtual_queue_time" integer,
	"self_assessment_queue_time" integer,
	"on_hold_time" integer,
	"read_only_time" integer,
	"arrived_time" timestamp with time zone,
	"cancelled_time" timestamp with time zone,
	"not_arrived_time" timestamp with time zone,
	"booked" timestamp with time zone,
	"generated_time" timestamp with time zone,
	"self_assessment_completed_time" timestamp with time zone,
	"reason_for_visit" text,
	"notes" text,
	"description" text,
	"cancel_reason" text,
	"parked_reason" text,
	"priority_id" text,
	"appointment_outcome_id" text,
	"appointment_outcome" text,
	"appointment_type_id" text,
	"booking_source_id" text,
	"booking_source" text,
	"consult_timer_status_id" text,
	"last_appointment_status_date" timestamp with time zone,
	"last_appointment_status_id" text,
	"practice_location_id" text,
	"location_name" text,
	"permanent_address_latitude" numeric(10, 8),
	"permanent_address_longitude" numeric(11, 8),
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."fact_diagnosis" (
	"diagnosis_key" serial PRIMARY KEY NOT NULL,
	"diagnosis_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"patient_key" integer,
	"provider_key" integer,
	"practice_key" integer,
	"appointment_id" text,
	"patient_id" text,
	"disease_id" text,
	"disease" text,
	"diagnosis_date" date,
	"diagnosis_by_id" text,
	"diagnosis_by" text,
	"summary" text,
	"is_long_term" boolean,
	"addto_problem" boolean,
	"is_highlighted" boolean,
	"sequence_no" integer,
	"is_confidential" boolean,
	"diagnosis_type_id" text,
	"diagnosis_type" text,
	"classification_record" text,
	"med_tech_id" text,
	"med_tech_read_code" text,
	"med_tech_read_term" text,
	"is_mapped" boolean,
	"on_set_date" date,
	"recall_id" text,
	"recall" text,
	"exclusion_start_date" date,
	"exclusion_end_date" date,
	"show_on_portal" boolean,
	"ext_appointment_id" text,
	"patient_med_tech_id" text,
	"snomed_id" text,
	"snomed_term" text,
	"concept_id" text,
	"practice_location_id" text,
	"location_name" text,
	"permanent_address_latitude" numeric(10, 8),
	"permanent_address_longitude" numeric(11, 8),
	"is_active" boolean,
	"is_deleted" boolean,
	"inserted_at" timestamp with time zone,
	"updated_at" timestamp with time zone,
	"inserted_by_id" text,
	"updated_by_id" text,
	"inserted_by" text,
	"updated_by" text,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."fact_immunisation" (
	"immunisation_key" serial PRIMARY KEY NOT NULL,
	"appointment_immunisation_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"patient_key" integer,
	"provider_key" integer,
	"practice_key" integer,
	"vaccine_key" integer,
	"appointment_id" text,
	"patient_schedule_id" text,
	"vaccine_id" text,
	"vaccine_name" text,
	"vaccine_code" text,
	"dose" numeric(8, 2),
	"dose_number" integer,
	"administration_site_id" text,
	"administration_site" text,
	"route_id" text,
	"route" text,
	"batch_number" text,
	"expiry_date" date,
	"immunisation_status_id" text,
	"immunisation_status" text,
	"vaccine_outcome_id" text,
	"vaccine_outcome" text,
	"is_nir_ack" boolean,
	"reason" text,
	"comments" text,
	"administration_time" timestamp with time zone,
	"vaccine_indication_id" text,
	"vaccine_indication" text,
	"vaccine_indication_code" text,
	"needle_length" numeric(5, 2),
	"has_diluent" boolean,
	"diluent_batch_no" text,
	"diluent_expiry_date" date,
	"is_confidential" boolean,
	"costing_code_id" text,
	"costing_code" text,
	"brand_id" text,
	"brand" text,
	"is_active" boolean,
	"is_deleted" boolean,
	"is_parked" boolean,
	"is_auto_bill" boolean,
	"vaccinator_id" text,
	"vaccinator" text,
	"vaccinator_code" text,
	"nir_sent_date" date,
	"show_on_portal" boolean,
	"vaccine_group_id" text,
	"vaccine_group" text,
	"practice_location_id" text,
	"location_name" text,
	"permanent_address_latitude" numeric(10, 8),
	"permanent_address_longitude" numeric(11, 8),
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."fact_invoice" (
	"invoice_key" serial PRIMARY KEY NOT NULL,
	"invoice_transaction_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"patient_key" integer,
	"provider_key" integer,
	"practice_key" integer,
	"patient_id" text,
	"acdate" date,
	"medtech_id" text,
	"payment_mode" text,
	"total_amount" numeric(10, 2),
	"unpaid_amount" numeric(10, 2),
	"claim_notes" text,
	"description" text,
	"income_provider" text,
	"invoice_payment_no" text,
	"provider" text,
	"domicile_code" text,
	"transaction_type" text,
	"notes" text,
	"is_active" boolean,
	"practice_location_id" text,
	"location_name" text,
	"permanent_address_latitude" numeric(10, 8),
	"permanent_address_longitude" numeric(11, 8),
	"inserted_at" timestamp with time zone,
	"updated_at" timestamp with time zone,
	"inserted_by" text,
	"updated_by" text,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."fact_invoice_detail" (
	"invoice_detail_key" serial PRIMARY KEY NOT NULL,
	"invoice_detail_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"invoice_key" integer,
	"invoice_transaction_id" text,
	"master_service_sub_service_id" text,
	"appointment_service_id" text,
	"comments" text,
	"quantity" numeric(10, 3),
	"claim_amount" numeric(10, 2),
	"co_payment" numeric(10, 2),
	"gross_claim_amount" numeric(10, 2),
	"gross_co_payment" numeric(10, 2),
	"is_billing_amount" boolean,
	"funder_id" text,
	"funder_name" text,
	"contract_service_id" text,
	"contract_service_name" text,
	"is_funded" boolean,
	"submission_status" text,
	"case_no" text,
	"sequence_no" integer,
	"billing_claim_status_id" text,
	"master_service_name" text,
	"master_service_code" text,
	"master_service_description" text,
	"service_name" text,
	"description" text,
	"code" text,
	"fee_code" text,
	"service_code" text,
	"sub_service_description" text,
	"duration" integer,
	"is_common_service" boolean,
	"service_code_for_claim" text,
	"is_active" boolean,
	"is_deleted" boolean,
	"practice_location_id" text,
	"location_name" text,
	"permanent_address_latitude" numeric(10, 8),
	"permanent_address_longitude" numeric(11, 8),
	"inserted_at" timestamp with time zone,
	"updated_at" timestamp with time zone,
	"inserted_by_id" text,
	"updated_by_id" text,
	"inserted_by" text,
	"updated_by" text,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "core"."fact_measurement" (
	"measurement_key" serial PRIMARY KEY NOT NULL,
	"patient_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"per_org_id" text NOT NULL,
	"patient_key" integer,
	"practice_key" integer,
	"screaning_id" text,
	"appointment_id" text,
	"screening_date" date,
	"scncode" text,
	"screening_type" text,
	"screening_group" text,
	"outcome" text,
	"outcome_description" text,
	"notes" text,
	"patient_med_tech_id" text,
	"provider_id" text,
	"provider_code" text,
	"provider_name" text,
	"hbaic" numeric(5, 2),
	"care_plan_id" text,
	"care_plane_name" text,
	"is_confidential" boolean,
	"is_gp2gp" boolean,
	"is_patient_portal" boolean,
	"is_showon_time_line" boolean,
	"med_tech_id" text,
	"screening_source_type_id" text,
	"service_template_id" text,
	"service_template_name" text,
	"score" numeric(8, 2),
	"screening_type_id" text,
	"field1" text,
	"field2" text,
	"field3" text,
	"practice_location_id" text,
	"location_name" text,
	"permanent_address_latitude" numeric(10, 8),
	"permanent_address_longitude" numeric(11, 8),
	"is_active" boolean,
	"is_deleted" boolean,
	"inserted_at" timestamp with time zone,
	"updated_at" timestamp with time zone,
	"inserted_by_id" text,
	"updated_by_id" text,
	"inserted_by" text,
	"updated_by" text,
	"load_run_id" uuid NOT NULL,
	"load_ts" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "etl"."core_merge_runs" (
	"merge_run_id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"load_run_id" uuid NOT NULL,
	"extract_type" text NOT NULL,
	"started_at" timestamp with time zone DEFAULT now() NOT NULL,
	"completed_at" timestamp with time zone,
	"status" text NOT NULL,
	"dimensions_created" integer DEFAULT 0,
	"dimensions_updated" integer DEFAULT 0,
	"facts_inserted" integer DEFAULT 0,
	"facts_updated" integer DEFAULT 0,
	"error" text,
	"result" text,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "etl"."load_run_files" (
	"load_run_file_id" serial PRIMARY KEY NOT NULL,
	"load_run_id" uuid NOT NULL,
	"s3_bucket" text NOT NULL,
	"s3_key" text NOT NULL,
	"s3_version_id" text NOT NULL,
	"file_hash" text NOT NULL,
	"date_extracted" text NOT NULL,
	"extract_type" text NOT NULL,
	"per_org_id" text NOT NULL,
	"practice_id" text NOT NULL,
	"rows_read" integer DEFAULT 0,
	"rows_ingested" integer DEFAULT 0,
	"rows_rejected" integer DEFAULT 0,
	"started_at" timestamp with time zone,
	"finished_at" timestamp with time zone,
	"status" text NOT NULL,
	"error_message" text,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "etl"."load_runs" (
	"load_run_id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"started_at" timestamp with time zone DEFAULT now() NOT NULL,
	"finished_at" timestamp with time zone,
	"status" text NOT NULL,
	"triggered_by" text NOT NULL,
	"notes" text,
	"total_files_processed" integer DEFAULT 0,
	"total_rows_ingested" integer DEFAULT 0,
	"total_rows_rejected" integer DEFAULT 0,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
ALTER TABLE "etl"."core_merge_runs" ADD CONSTRAINT "core_merge_runs_load_run_id_load_runs_load_run_id_fk" FOREIGN KEY ("load_run_id") REFERENCES "etl"."load_runs"("load_run_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "etl"."load_run_files" ADD CONSTRAINT "load_run_files_load_run_id_load_runs_load_run_id_fk" FOREIGN KEY ("load_run_id") REFERENCES "etl"."load_runs"("load_run_id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE UNIQUE INDEX "patients_stg_natural_key_idx" ON "stg"."patients" USING btree ("patient_id","practice_id","per_org_id");--> statement-breakpoint
CREATE UNIQUE INDEX "dim_medicine_business_key_current_idx" ON "core"."medicine" USING btree ("medicine_id","practice_id","per_org_id","is_current");--> statement-breakpoint
CREATE UNIQUE INDEX "dim_patient_business_key_current_idx" ON "core"."patient" USING btree ("patient_id","practice_id","per_org_id","is_current");--> statement-breakpoint
CREATE UNIQUE INDEX "dim_practice_business_key_current_idx" ON "core"."practice" USING btree ("practice_id","per_org_id","is_current");--> statement-breakpoint
CREATE UNIQUE INDEX "dim_provider_business_key_current_idx" ON "core"."provider" USING btree ("provider_id","practice_id","per_org_id","is_current");--> statement-breakpoint
CREATE UNIQUE INDEX "dim_vaccine_business_key_current_idx" ON "core"."vaccine" USING btree ("vaccine_id","practice_id","per_org_id","is_current");--> statement-breakpoint
CREATE UNIQUE INDEX "fact_appointment_business_key_idx" ON "core"."fact_appointment" USING btree ("appointment_id","practice_id","per_org_id");--> statement-breakpoint
CREATE UNIQUE INDEX "fact_diagnosis_business_key_idx" ON "core"."fact_diagnosis" USING btree ("diagnosis_id","practice_id","per_org_id");--> statement-breakpoint
CREATE UNIQUE INDEX "fact_immunisation_business_key_idx" ON "core"."fact_immunisation" USING btree ("appointment_immunisation_id","practice_id","per_org_id");--> statement-breakpoint
CREATE UNIQUE INDEX "fact_invoice_business_key_idx" ON "core"."fact_invoice" USING btree ("invoice_transaction_id","practice_id","per_org_id");--> statement-breakpoint
CREATE UNIQUE INDEX "fact_invoice_detail_business_key_idx" ON "core"."fact_invoice_detail" USING btree ("invoice_detail_id","practice_id","per_org_id");--> statement-breakpoint
CREATE UNIQUE INDEX "fact_measurement_business_key_idx" ON "core"."fact_measurement" USING btree ("patient_id","practice_id","per_org_id");--> statement-breakpoint
CREATE UNIQUE INDEX "core_merge_runs_load_run_completed_idx" ON "etl"."core_merge_runs" USING btree ("load_run_id","extract_type") WHERE "etl"."core_merge_runs"."status" = 'completed';--> statement-breakpoint
CREATE INDEX "core_merge_runs_status_idx" ON "etl"."core_merge_runs" USING btree ("status");--> statement-breakpoint
CREATE UNIQUE INDEX "load_run_files_unique_idx" ON "etl"."load_run_files" USING btree ("s3_version_id","file_hash");--> statement-breakpoint
CREATE INDEX "load_run_files_load_run_idx" ON "etl"."load_run_files" USING btree ("load_run_id");