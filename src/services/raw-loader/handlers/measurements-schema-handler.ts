import { BaseSchemaDrivenHandler } from "../schema-driven-handler";
import type { ValidationRule } from "../types/raw-loader";

/**
 * Measurements handler generated from schema
 * Generated on 2025-10-06T01:11:46.105Z
 */
export class MeasurementsSchemaHandler extends BaseSchemaDrivenHandler {
  extractType = "Measurement";
  tableName = "raw.measurements";

  // Generated from src/db/schema/raw/measurements.ts
  columnMapping = [
    "patient_id",
    "screening_id",
    "appointment_id",
    "screening_date",
    "scncode",
    "screening_type",
    "screening_group",
    "outcome",
    "outcome_description",
    "notes",
    "is_active",
    "updated_by_id",
    "updated_by",
    "updated_at",
    "inserted_by_id",
    "inserted_by",
    "inserted_at",
    "patient_med_tech_id",
    "practice",
    "practice_id",
    "provider_id",
    "provider_code",
    "provider_name",
    "hba1c",
    "is_deleted",
    "care_plan_id",
    "care_plane_name",
    "is_confidential",
    "is_gp2gp",
    "is_patient_portal",
    "is_show_on_time_line",
    "med_tech_id",
    "screening_source_type_id",
    "service_template_id",
    "service_template_name",
    "user_logging_id",
    "logging_user_name",
    "field1",
    "field2",
    "field3",
    "field4",
    "field5",
    "field6",
    "field7",
    "field8",
    "field9",
    "field10",
    "field11",
    "field12",
    "field13",
    "field14",
    "field15",
    "field16",
    "field17",
    "field18",
    "field19",
    "field20",
    "field21",
    "field22",
    "field23",
    "field24",
    "field25",
    "field26",
    "field27",
    "field28",
    "field29",
    "field30",
    "field31",
    "field32",
    "field33",
    "field34",
    "field35",
    "field36",
    "field37",
    "field38",
    "field39",
    "field40",
    "field41",
    "field42",
    "field43",
    "field44",
    "field45",
    "field46",
    "field47",
    "field48",
    "field49",
    "field50",
    "permanent_address_latitude",
    "permanent_address_longitude",
    "practice_location_id",
    "location_name",
    "field51",
    "field52",
    "field53",
    "field54",
    "field55",
    "field56",
    "field57",
    "field58",
    "field59",
    "field60",
    "field61",
    "field62",
    "field63",
    "field64",
    "field65",
    "field66",
    "field67",
    "field68",
    "field69",
    "field70",
    "field71",
    "field72",
    "field73",
    "field74",
    "field75",
    "field76",
    "field77",
    "field78",
    "field79",
    "field80",
    "field81",
    "field82",
    "field83",
    "field84",
    "field85",
    "field86",
    "field87",
    "field88",
    "field89",
    "field90",
    "field91",
    "field92",
    "field93",
    "field94",
    "field95",
    "field96",
    "field97",
    "field98",
    "field99",
    "field100",
    "score",
    "screening_type_id",
    "per_org_id",
    "loaded_date_time",
  ];

  validationRules: ValidationRule[] = [
    // TODO: Add entity-specific validation rules
    // Example:
    // {
    //   columnName: "patient_id",
    //   ruleType: "required",
    //   validator: (value) => /^\d+$/.test(value),
    //   errorMessage: "patient_id must be numeric"
    // }
  ];
}
