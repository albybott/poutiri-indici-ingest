import { text, timestamp, uuid, boolean, date } from "drizzle-orm/pg-core";
import { createTable } from "../../../utils/create-table.js";

export const practiceInfoStg = createTable("stg.practice_info", {
  // Typed columns with proper constraints
  practiceId: text("practice_id").notNull(),
  practiceName: text("practice_name").notNull(),
  practiceCategory: text("practice_category"),
  practiceSpeciality: text("practice_speciality"),
  pho: text("pho"),
  organizationType: text("organization_type"),
  orgShortName: text("org_short_name"),
  orgCode: text("org_code"),
  ediAccount: text("edi_account"),
  legalEntityTitle: text("legal_entity_title"),
  legalStatus: text("legal_status"),
  incorporationNumber: text("incorporation_number"),
  legalDate: date("legal_date"),
  comments: text("comments"),
  formula: text("formula"),
  ownershipModel: text("ownership_model"),
  rural: boolean("rural").notNull().default(false),
  primaryPhone: text("primary_phone"),
  secondaryPhone: text("secondary_phone"),
  otherPhone: text("other_phone"),
  primaryEmail: text("primary_email"),
  secondaryEmail: text("secondary_email"),
  otherEmail: text("other_email"),
  pager: text("pager"),
  fax1: text("fax1"),
  fax2: text("fax2"),
  healthFacilityNo: text("health_facility_no"),
  hpiFacilityNo: text("hpi_facility_no"),
  hpiFacilityExt: text("hpi_facility_ext"),
  hpiOrganizationId: text("hpi_organization_id"),
  hpiOrganizationExt: text("hpi_organization_ext"),
  gstNo: text("gst_no"),
  accNo: text("acc_no"),
  bankAccountNo: text("bank_account_no"),
  mohSendingPracticeId: text("moh_sending_practice_id"),
  afterHoursNumber: text("after_hours_number"),
  emergencyNumber: text("emergency_number"),
  isActive: boolean("is_active").notNull().default(true),
  isDeleted: boolean("is_deleted").notNull().default(false),
  perOrgId: text("per_org_id").notNull(),
  loadedDateTime: timestamp("loaded_date_time", { withTimezone: true }),

  // Lineage columns
  s3Bucket: text("s3_bucket").notNull(),
  s3Key: text("s3_key").notNull(),
  s3VersionId: text("s3_version_id").notNull(),
  fileHash: text("file_hash").notNull(),
  dateExtracted: text("date_extracted").notNull(),
  extractType: text("extract_type").notNull(),
  loadRunId: uuid("load_run_id").notNull(),
  loadTs: timestamp("load_ts", { withTimezone: true }).notNull().defaultNow(),
});
