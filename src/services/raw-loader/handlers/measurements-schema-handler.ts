import { BaseSchemaDrivenHandler } from "../schema-driven-handler";
import type { ValidationRule } from "../types/raw-loader";

/**
 * Measurements handler generated from schema
 * Generated on 2025-10-06T01:11:46.105Z
 */
export class MeasurementsSchemaHandler extends BaseSchemaDrivenHandler {
  extractType = "Measurement";
  tableName = "raw.measurements";

  // Generated from src/db/schema/raw/measurements.ts
  columnMapping = [
    'patient_id',
    'screaning_id',
    'appointment_id',
    'screening_date',
    'scncode',
    'screening_type',
    'screening_group',
    'outcome',
    'outcome_description',
    'notes',
    'is_active',
    'updated_by_id',
    'updated_by',
    'updated_at',
    'inserted_by_id',
    'inserted_by',
    'inserted_at',
    'patient_med_tech_id',
    'practice',
    'practice_id',
    'provider_id',
    'provider_code',
    'provider_name',
    'hbaic',
    'is_deleted',
    'care_plan_id',
    'care_plane_name',
    'is_confidential',
    'is_gp_2_gp',
    'is_patient_portal',
    'is_showon_time_line',
    'med_tech_id',
    'screening_source_type_id',
    'service_template_id',
    'service_template_name',
    'user_logging_id',
    'logging_user_name',
    'field_1',
    'field_2',
    'field_3',
    'field_4',
    'field_5',
    'field_6',
    'field_7',
    'field_8',
    'field_9',
    'field_10',
    'field_11',
    'field_12',
    'field_13',
    'field_14',
    'field_15',
    'field_16',
    'field_17',
    'field_18',
    'field_19',
    'field_20',
    'field_21',
    'field_22',
    'field_23',
    'field_24',
    'field_25',
    'field_26',
    'field_27',
    'field_28',
    'field_29',
    'field_30',
    'field_31',
    'field_32',
    'field_33',
    'field_34',
    'field_35',
    'field_36',
    'field_37',
    'field_38',
    'field_39',
    'field_40',
    'field_41',
    'field_42',
    'field_43',
    'field_44',
    'field_45',
    'field_46',
    'field_47',
    'field_48',
    'field_49',
    'field_50',
    'permanent_address_latitude',
    'permanent_address_longitude',
    'practice_location_id',
    'location_name',
    'field_51',
    'field_52',
    'field_53',
    'field_54',
    'field_55',
    'field_56',
    'field_57',
    'field_58',
    'field_59',
    'field_60',
    'field_61',
    'field_62',
    'field_63',
    'field_64',
    'field_65',
    'field_66',
    'field_67',
    'field_68',
    'field_69',
    'field_70',
    'field_71',
    'field_72',
    'field_73',
    'field_74',
    'field_75',
    'field_76',
    'field_77',
    'field_78',
    'field_79',
    'field_80',
    'field_81',
    'field_82',
    'field_83',
    'field_84',
    'field_85',
    'field_86',
    'field_87',
    'field_88',
    'field_89',
    'field_90',
    'field_91',
    'field_92',
    'field_93',
    'field_94',
    'field_95',
    'field_96',
    'field_97',
    'field_98',
    'field_99',
    'field_100',
    'score',
    'screening_type_id',
    'per_org_id',
    'loaded_date_time',
    'load_run_file_id',
    's3_bucket',
    's3_key',
    's3_version_id',
    'file_hash',
    'date_extracted',
    'extract_type',
    'load_run_id',
    'load_ts'
];

  validationRules: ValidationRule[] = [
    // TODO: Add entity-specific validation rules
    // Example:
    // {
    //   columnName: "patient_id",
    //   ruleType: "required",
    //   validator: (value) => /^\d+$/.test(value),
    //   errorMessage: "patient_id must be numeric"
    // }
  ];
}
