import { text, timestamp, uuid } from "drizzle-orm/pg-core";
import { createTable } from "../../../utils/create-table.js";

export const appointmentsRaw = createTable("raw.appointments", {
  // Source columns as text (all fields from Appointments extract)
  appointmentId: text("appointment_id"),
  patientId: text("patient_id"),
  appointmentType: text("appointment_type"),
  appointmentStatus: text("appointment_status"),
  scheduleDate: text("schedule_date"),
  notes: text("notes"),
  arrived: text("arrived"),
  waitingForPayment: text("waiting_for_payment"),
  appointmentCompleted: text("appointment_completed"),
  consultTime: text("consult_time"),
  booked: text("booked"),
  medTechId: text("med_tech_id"),
  insertedAt: text("inserted_at"),
  insertedBy: text("inserted_by"),
  updatedAt: text("updated_at"),
  updatedBy: text("updated_by"),
  practice: text("practice"),
  practiceId: text("practice_id"),
  providerId: text("provider_id"),
  isActive: text("is_active"),
  isDeleted: text("is_deleted"),
  provider: text("provider"),
  permanentAddressLatitude: text("permanent_address_latitude"),
  permanentAddressLongitude: text("permanent_address_longitude"),
  practiceLocationId: text("practice_location_id"),
  locationName: text("location_name"),
  reasonForVisit: text("reason_for_visit"),
  statusGroup: text("status_group"),
  duration: text("duration"),
  appointmentOutcomeId: text("appointment_outcome_id"),
  appointmentOutcome: text("appointment_outcome"),
  appointmentTypeId: text("appointment_type_id"),
  bookingSourceId: text("booking_source_id"),
  bookingSource: text("booking_source"),
  consultEndTime: text("consult_end_time"),
  consultStartTime: text("consult_start_time"),
  consultTimerStatusId: text("consult_timer_status_id"),
  description: text("description"),
  endTime: text("end_time"),
  generatedTime: text("generated_time"),
  gpQueueTime: text("gp_queue_time"),
  isArrived: text("is_arrived"),
  isConsultParked: text("is_consult_parked"),
  isDummy: text("is_dummy"),
  lastAppointmentStatusDate: text("last_appointment_status_date"),
  lastAppointmentStatusId: text("last_appointment_status_id"),
  cancelReason: text("cancel_reason"),
  parkedReason: text("parked_reason"),
  priorityId: text("priority_id"),
  arrivedTime: text("arrived_time"),
  cancelledTime: text("cancelled_time"),
  notArrivedTime: text("not_arrived_time"),
  nurseQueueTime: text("nurse_queue_time"),
  onHoldTime: text("on_hold_time"),
  readOnlyTime: text("read_only_time"),
  selfAssessmentCompletedTime: text("self_assessment_completed_time"),
  selfAssessmentQueueTime: text("self_assessment_queue_time"),
  startTime: text("start_time"),
  triageQueueTime: text("triage_queue_time"),
  virtualQueueTime: text("virtual_queue_time"),
  isConfidential: text("is_confidential"),
  isConsentToShare: text("is_consent_to_share"),
  perOrgId: text("per_org_id"),
  loadedDateTime: text("loaded_date_time"),

  // Lineage columns
  s3Bucket: text("s3_bucket").notNull(),
  s3Key: text("s3_key").notNull(),
  s3VersionId: text("s3_version_id").notNull(),
  fileHash: text("file_hash").notNull(),
  dateExtracted: text("date_extracted").notNull(),
  extractType: text("extract_type").notNull(),
  loadRunId: uuid("load_run_id").notNull(),
  loadTs: timestamp("load_ts", { withTimezone: true }).notNull().defaultNow(),
});
