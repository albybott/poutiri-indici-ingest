import { text, timestamp, uuid } from "drizzle-orm/pg-core";
import { createTable } from "../../../utils/create-table.js";

export const providersRaw = createTable("raw.providers_raw", {
  // Source columns as text (all fields from Provider extract)
  providerId: text("provider_id"),
  practiceId: text("practice_id"),
  nhiNumber: text("nhi_number"),
  isNhiValidate: text("is_nhi_validate"),
  title: text("title"),
  firstName: text("first_name"),
  middleName: text("middle_name"),
  familyName: text("family_name"),
  fullName: text("full_name"),
  preferredName: text("preferred_name"),
  otherMaidenName: text("other_maiden_name"),
  maritalStatus: text("marital_status"),
  gender: text("gender"),
  dob: text("dob"),
  age: text("age"),
  ageType: text("age_type"),
  ageGroup: text("age_group"),
  isAlive: text("is_alive"),
  deathDate: text("death_date"),
  dobSource: text("dob_source"),
  picturePath: text("picture_path"),
  consentedToShare: text("consented_to_share"),
  placeOfBirth: text("place_of_birth"),
  countryOfBirth: text("country_of_birth"),
  cellNumber: text("cell_number"),
  dayPhone: text("day_phone"),
  nightPhone: text("night_phone"),
  email: text("email"),
  secondaryEmail: text("secondary_email"),
  preferredContactMethod: text("preferred_contact_method"),
  consentTextMessaging: text("consent_text_messaging"),
  isPortalUser: text("is_portal_user"),
  isActive: text("is_active"),
  isDeleted: text("is_deleted"),
  insertedBy: text("inserted_by"),
  updatedBy: text("updated_by"),
  insertedAt: text("inserted_at"),
  updatedAt: text("updated_at"),
  isSameAddress: text("is_same_address"),
  notes: text("notes"),
  isGenderSelfIdentified: text("is_gender_self_identified"),
  sexRelatedGender: text("sex_related_gender"),
  isWorkedVisaRequired: text("is_worked_visa_required"),
  balance: text("balance"),
  registerStatus: text("register_status"),
  medTechNok: text("med_tech_nok"),
  practiceName: text("practice_name"),
  calculatedBalance: text("calculated_balance"),
  permanentAddress: text("permanent_address"),
  deprivationQuintile: text("deprivation_quintile"),
  uncertaintyCode: text("uncertainty_code"),
  postalAddress: text("postal_address"),
  temporaryAddress: text("temporary_address"),
  city: text("city"),
  suburb: text("suburb"),
  portalRegistrationStatus: text("portal_registration_status"),
  ethnicity: text("ethnicity"),
  affiliationId: text("affiliation_id"),
  affiliation: text("affiliation"),
  affiliationCode: text("affiliation_code"),
  nzmcNo: text("nzmc_no"),
  npiNo: text("npi_no"),
  hblMatPayeeNo: text("hbl_mat_payee_no"),
  hblMatAgreeNo: text("hbl_mat_agree_no"),
  hpacMatAgreeNo: text("hpac_mat_agree_no"),
  hpacMatAgreeVer: text("hpac_mat_agree_ver"),
  hblPayeeNo: text("hbl_payee_no"),
  hblGpAgreeNo: text("hbl_gp_agree_no"),
  hblGpAgreeVer: text("hbl_gp_agree_ver"),
  accreditationNo: text("accreditation_no"),
  phoContractNo: text("pho_contract_no"),
  phoContractVer: text("pho_contract_ver"),
  groupId: text("group_id"),
  groupName: text("group_name"),
  accProviderCode: text("acc_provider_code"),
  healthFacilityNo: text("health_facility_no"),
  hpiNo: text("hpi_no"),
  unloadRef: text("unload_ref"),
  accProviderNo: text("acc_provider_no"),
  accVendorId: text("acc_vendor_id"),
  pinPanNo: text("pin_pan_no"),
  memberNo: text("member_no"),
  rhaPayeeNo: text("rha_payee_no"),
  budgetNo: text("budget_no"),
  ipa: text("ipa"),
  registerationNo: text("registeration_no"),
  labNo: text("lab_no"),
  labTestsDrId: text("lab_tests_dr_id"),
  colorCode: text("color_code"),
  isDoctor: text("is_doctor"),
  acc45Prefix: text("acc45_prefix"),
  nextAcc45No: text("next_acc45_no"),
  maximumAcc45No: text("maximum_acc45_no"),
  aitcPrefix: text("aitc_prefix"),
  nextAitcNo: text("next_aitc_no"),
  maximumAitcNo: text("maximum_aitc_no"),
  arc18NextAccFormNo: text("arc18_next_acc_form_no"),
  m45Prefix: text("m45_prefix"),
  nextM45No: text("next_m45_no"),
  maximumM45No: text("maximum_m45_no"),
  isNzfAvoid: text("is_nzf_avoid"),
  isNzfAdjust: text("is_nzf_adjust"),
  isNzfInformation: text("is_nzf_information"),
  isNzfNoAction: text("is_nzf_no_action"),
  isNzfMonitor: text("is_nzf_monitor"),
  providerCode: text("provider_code"),
  genericProfileTypeId: text("generic_profile_type_id"),
  currentAppointmentId: text("current_appointment_id"),
  sureMedUserName: text("sure_med_user_name"),
  isInvoicingDiary: text("is_invoicing_diary"),
  isGp2Gp: text("is_gp2gp"),
  fromDatePractice: text("from_date_practice"),
  apcExpiryDate: text("apc_expiry_date"),
  mpsExpiryDate: text("mps_expiry_date"),
  apcName: text("apc_name"),
  practiceLocation: text("practice_location"),
  userRole: text("user_role"),
  providerPermanentAddressLatitude: text("provider_permanent_address_latitude"),
  providerPermanentAddressLongitude: text(
    "provider_permanent_address_longitude"
  ),
  perOrgId: text("per_org_id"),
  loadedDateTime: text("loaded_date_time"),

  // Lineage columns
  s3Bucket: text("s3_bucket").notNull(),
  s3Key: text("s3_key").notNull(),
  s3VersionId: text("s3_version_id").notNull(),
  fileHash: text("file_hash").notNull(),
  dateExtracted: text("date_extracted").notNull(),
  extractType: text("extract_type").notNull(),
  loadRunId: uuid("load_run_id").notNull(),
  loadTs: timestamp("load_ts", { withTimezone: true }).notNull().defaultNow(),
});
